name: Build & Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: echo ::set-output name=version::$(npm pkg get version | tr -d '"')
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
  build:
    name: Build
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"

      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "17"
      - name: Install NPM packages
        run: npm ci
      - name: Build project
        run: npm run ${{ matrix.os }}

      - name: Fetch action
        id: pl
        uses: Rishabh510/Path-lister-action@master
        with:
          path: "out/"
          type: ".exe"
      - name: Output results
        run: |
          echo "Found ${{ steps.pl.outputs.path_count }} file(s) with this extension:"
          for i in ${{ steps.pl.outputs.paths }}; do
          echo $i
          done

      - name: Fetch action
        id: pl
        uses: Rishabh510/Path-lister-action@master
        with:
          path: "out/"
          type: ".msi"
      - name: Output results
        run: |
          echo "Found ${{ steps.pl.outputs.path_count }} file(s) with this extension:"
          for i in ${{ steps.pl.outputs.paths }}; do
          echo $i
          done


      - name: Get version
        id: get_version
        run: echo ::set-output name=version::$(npm pkg get version | tr -d '"')
      - name: KosmoS3-arm64.dmg
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./out/KosmoS3-arm64.dmg
          asset_name: KosmoS3-arm64.dmg
          asset_content_type: application/octet-stream
      - name: KosmoS3-x64.dmg
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./out/KosmoS3-x64.dmg
          asset_name: KosmoS3-x64.dmg
          asset_content_type: application/octet-stream
